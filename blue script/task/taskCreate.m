%% create ports based on sldd signal template
[inCnt, outCnt,inCntDel, outCntDel] = createPorts('Template_PortsCreate', gcs, 'sheet','TmComprCtrl')
createGotoBasedPorts()
numCreated = creatFromBasedOnUselessGoto('posBase', [12000,0])
numCreated = creatGotoBasedOnUselessFrom('posBase', [13500,0])

%% create DEBUG 模块
outCnt = createPortsOutFrom(gcs, 'TmRefriVlvCtrl')
[cnt] = createDebug(gcs, ...
    'NameInType','tailIn')  % tailIn, findLoc



%% 为所有模型创建goto  from 模块
[createdInputAll, createdOutputAll] = createModGotoAll('mode','inport');

% 找到相同的元素
comList = intersect(createdInputAll, createdOutputAll);
% 找到 createdInputAll 中没有出现在 createdOutputAll 中的元素
inList = setdiff(createdInputAll, createdOutputAll);
% 找到 elementsOnlyInOutput 中没有出现在 createdInputAll 中的元素
outList = setdiff(createdOutputAll, createdInputAll);


%% 创建输入输出端口及对应的goto from 模块
[numInputPorts, numOutputPorts] = createPortsGoto('inList', inList, 'outList', outList);

% 如下这些信号，是一些模型的输出，同时也是另外一些模型的输入，因此，不可能是输入信号
% 建议移动下Blue 模块后，再进行执行，用于区分, 最终是否需要删除，需要评估是否需要输出这个信号
[numInputPorts, numOutputPorts] = createPortsGoto('outList', comList);

%% createBus
% 目的: 点击bus后，为bus信号创建对应的outport模块
result = createBusPort()

% 目的: 点击bus后，为bus信号创建对应的Goto模块
result = createBusGoto()

% 目的: 点击bus后，为bus信号依次创建Convertion, goto，并将其自动连线
result = createBusConvertionGoto()

%% 目的: 创建整个架构模型，基于goto from 方案
creatArch()

%% creatArchPortGoto()
creatArchPortGoto()

%% creatTmIn(), 创建输入信号转换，将interface信号，经过conversion模块，转成内部信号，做到信号隔离
nums = creatTmIn();

%% creatTmOut(), 创建输输出信号转换，将model base信号，经过conversion模块，转成interface信号，做到信号隔离
nums = creatTmOut();

%% 为所有模型解析信号
createSigOnLine(gcs, ...
    'isEnableOut',false, ...
    'skipTrig',false, ...
    'resoveValue',true)

createSigOnLineAll()
%% 根据 goto from 更新当前系统的输入输出端口
createModGotoAll('mode','both');
createPortsGotoUpdate( ...
    'wid',400, ...
    'mode','keep' ...    % pre  tail  keep
    );

createModGoto(gcb);
createPortsGotoUpdate( ...
    'wid',400, ...
    'mode','pre'...
    );

changeModSize(gcb)



%% 根据模型创建bus 信号
creatBusSig(gcb)

%% 根据模型创建merge 信号
createMerge( ...
    'sigList', ...
    {'rTmRefriVlvCtrl_X_s32EexvPoseKp','rTmRefriVlvCtrl_X_s32EexvPoseKi', ...
    'rTmRefriVlvCtrl_X_s32EexvPoseFF','rTmRefriVlvCtrl_Te_s32EexvControlErr', ...
    'rTmRefriVlvCtrl_X_i16EexvKpLowLimit', 'rTmRefriVlvCtrl_X_i16EexvKpUpLimit', ...
    'rTmRefriVlvCtrl_X_i16EexvKiLowLimit', 'rTmRefriVlvCtrl_X_i16EexvKiUpLimit', ...
    'rTmRefriVlvCtrl_X_i16EexvPoseHi', 'rTmRefriVlvCtrl_X_i16EexvPoseLow', ...
    'rTmRefriVlvCtrl_t_u8PIPeriod', ...
    },...
    'resovleSig',true, ...
    'RootName','TmRefriVlvCtrl')

createMerge( ...
    'sigList', ...
    {'rTmComprCtrl_Te_s32LowErrStop','rTmComprCtrl_Te_s32TempError', ...
    'rTmComprCtrl_Te_s32UpErrStop','rTmComprCtrl_n_u16ComprRpmFF', ...
    'rTmComprCtrl_n_u16ComprRpmKi', 'rTmComprCtrl_n_u16ComprRpmKp', ...
    'rTmComprCtrl_n_u16DisOverrideValue', 'rTmComprCtrl_n_i16KiLowLimit', ...
    'rTmComprCtrl_n_i16KiUpLimit', 'rTmComprCtrl_n_i16KpLowLimit', ...
    'rTmComprCtrl_n_i16KpUpLimit', 'rTmComprCtrl_t_u16PIPeriod',...
    'xTmComprCtrl_B_Enable'...
    },...
    'resovleSig',true)
%% 创建架构
creatTmBaseArch('mod','sub')

%% 创建子模型生成代码
creatRefPCMU('TmSovCtrl')

%% 创建模型相关的模块
createMode(gcb, ...
    'inType','port', ...      % 可选参数 port, ground, from, const, none
    'outType','port', ...       % 可选参数 port, term, goto, disp, none
    'suffixStr','',...
    ...                         % 创建 ports 相关配置
    'add', 'DataTypeConversion',...           % 可选参数 blockType, None, etc：SignalConversion DataTypeConversion
    ...                         % 创建 goto from 相关配置
    'bkHalfLength', 125,...
    ...                         % 创建 信号解析 相关配置
    'isEnableIn',true,...
    'isEnableOut',true,...
    'resoveValue',false,...
    'logValue',false,...
    'testValue',false,...
    'dispName', false...
    )

%% 创建harness
mask = 0x08;
createHarness(gcb, ...
    'lastStep','Bit3PowerFlt',...  % Initialize
    'nextStep','Bit5TAmbProtect',...  % None
    'mask',mask,...
    'lev1',{'Bit4HvActvSts'}, ...
    'lev2',{ ...
        {'Flt', ...
        'NoFltOnBdChrgrHndlSts2','NoFltOnBdChrgrHndlSts3','NoFltHvActvSts'}, ...
    }, ...
    'inName',{ ...
        { 
            'sTmIn_D_u8OnBdChrgrHndlSts',...
            'sTmIn_D_u8HvActvSts',...
        }, ...
    },...
    'rstName',{ ...
        { 
            'sTmComprCtrl_D_u8AcOffCode0'...
        }, ...
    },...
    'inValue',{ ...
        { ...
            {1 1}, ...  
            {2 1}, ...  
            {3 1}, ...  
            {1 2}, ...  
        }, ...
    },...
    'rstValue',{ ...
        { ...
            {mask}, ...  
            {0}, ...   
            {0}, ...   
            {0}, ...   
        }, ...
    }...
    )

%% 生成完代码后，整理代码文件
createCodePkg('VcThermal_23N7_V131_3090508',...
    'DCM_NAME', 'NA')  %  NA HY11_PCMU_Tm_TT_V1060428.DCM

%% 创建Merge
createMerge('step',200, ...
    'sigList',{'rTmSovCtrl_B_HpcSov4OnOffSts','rTmSovCtrl_B_HpcSov5OnOffSts'}, ...
    'RootName','TmSovCtrl')
%% 创建Switch case

createSwitchCase( ...
    'caseIn','sTmRefriModeMgr_D_u8ModeSwitchType', ...
    'caseList','{17}', ...
    'caseNames',{'WaitSOVExv'}, ...
    'sigNames',{'xTmComprCtrl_B_RdyToChange'})


createSwitchCase( ...
    'caseIn','sTmRefriModeMgr_D_u8ModeSwitchType', ...
    'caseList','{1,17,[8 9 10 11 12 13 18 19],20,21,22,23}', ...
    'caseNames',{'Stop','HoldSwitch','ReduceRpm','Test','Test2','Test3','Test4'}, ...
    'sigNames',{'xTmComprCtrl_B_ChangeFinished', 'rTmComprCtrl_n_u16CompRpmReq'})

createMerge('step',200, ...
    'sigList',{'rTmComprCtrl_D_u8CmprRefriSwitchSt','rTmComprCtrl_n_u16CompRpmReq'}, ...
    'RootName','TmComprCtrl')

%% 创建测试管理器
createTestManage('04_TmRefriVlvCtrl') 
createTestManage('06_TmComprCtrl') 


